#BlueJ class context
comment0.target=World
comment1.params=
comment1.target=World()
comment1.text=Default\ constructor\ which\ creates\ the\ world,\ GUI,\ and\ other\ associated\ classes.
comment10.params=filename\ Side
comment10.target=boolean\ LoadTeam(java.lang.String,\ int)
comment10.text=\ \ This\ loads\ a\ team\ from\ the\ filename\ it\ is\ passed.\ \ Do\ not\ give\ it\ an\ extension\ on\ the\ \n\ \ \ \ filename.\ \ The\ extension\ ".class"\ is\ appended\ somewhere\ deep\ in\ the\ bowels\ of\ Sun's\ncode.\ \ And\ no,\ I\ didn't\ see\ that\ fact\ documented\ anywhere\ either.
comment11.params=Unknown
comment11.target=int\ GetTeamID(Player)
comment11.text=\ \ Returns\ either\ World.EAST\ or\ World.WEST\ depending\ on\ which\ team\ the\ player\ is\ on.\nReturns\ -1\ on\ error.
comment12.params=CuriousGeorge\ Direction
comment12.target=int\ Look(Player,\ int)
comment12.text=\ \ Returns\ information\ about\ any\ of\ the\ eight\ squares\ around\ the\ player.\ \ \ It\ returns\nOPPONENT,\ BALL,\ EMPTY,\ TEAMMATE,\ or\ BOUNDARY.\ \ It\ takes\ N,\ NE,\ E,\ etc.
comment13.params=Client
comment13.target=int\ GetBallDirection(Player)
comment13.text=Returns\ the\ direction\ to\ the\ ball.
comment14.params=Client
comment14.target=int\ GetReverseDirection(Player)
comment14.text=Returns\ the\ direction\ to\ the\ ball\ reversed\ for\ the\ west\ team
comment15.params=Client
comment15.target=int\ GetBallDistance(Player)
comment15.text=Gets\ the\ distance\ to\ the\ ball.
comment16.params=Client\ nth
comment16.target=int\ GetOpponentDirection(Player,\ int)
comment16.text=This\ function\ returns\ the\ direction\ to\ the\ nth\ closest\ opponent.
comment17.params=Client
comment17.target=java.awt.Point\ GetCorrectedPlayerLocation(Player)
comment17.text=\ \ This\ allows\ players\ to\ determine\ where\ they\ are.\ \ Coordinates\ are\ zero\ based\ with\n\ \ \ \ (0,\ 0)\ in\ the\ upper\ left\ hand\ corner\ of\ the\ field.\ \ The\ field\ extends\ World.XSQUARES\ to\n\ \ \ \ the\ east\ and\ World.YSQUARES\ to\ the\ south.\ \ The\ bottom\ right\ corner\ is\:\n(XSQUARES\ -\ 1,\ YSQUARES\ -\ 1)\ 'cuz\ it's\ a\ zero\ based\ coordinate\ system.
comment18.params=Client
comment18.target=java.awt.Point\ GetPlayerLocation(Player)
comment18.text=This\ returns\ the\ player's\ true\ location\ on\ the\ field\ -\ it's\ not\ corrected\ for\ side...
comment19.params=Client\ nth
comment19.target=int\ GetOpponentDistance(Player,\ int)
comment19.text=\ \ The\ original\ implementation\ gave\ players\ the\ ability\ to\ determine\ the\ distance\ to\ the\n\ \ \ \ closest\ opponent,\ the\ next\ closest\ opponent,\ and\ so\ forth.\ \ \ I'd\ rather\ give\ them\ the\n\ \ \ \ distance\ to\ player\ one,\ player\ two,\ etc,\ just\ because\ it\ makes\ my\ life\ easier,\ but\ \n\ \ \ \ they'd\ probably\ just\ end\ up\ seeing\ who\ was\ closest\ anyway...\ \ So\ I\ left\ it\ alone;\ if\ you\npass\ it\ 1,\ it\ will\ return\ the\ closest.\ \ If\ you\ pass\ it\ 4,\ it\ will\ return\ the\ distance\ to\ the\ furthest.
comment2.params=
comment2.target=void\ GoAhead()
comment20.params=nth\ Client\ ClientTeam\ PlayerLocation
comment20.target=java.awt.Point\ GetOpponentLocation(int,\ Player,\ Team,\ java.awt.Point)
comment20.text=\ \ I'm\ not\ proud\ of\ this\ function.\ \ It\ finds\ the\ location\ of\ the\ nth\ clostest\ opponent\ to\ the\n\ \ \ \ client.\ \ It\ takes\ so\ many\ arguements\ because\ the\ functions\ that\ call\ it\ need\ to\ find\nclient\ team\ and\ player\ location\ anyway\ -\ no\ sense\ in\ doing\ it\ twice.
comment21.params=Action
comment21.target=boolean\ BallAction(int)
comment21.text=This\ is\ what\ the\ ball\ calls\ to\ query\ the\ world\ to\ see\ if\ a\ given\ move\ is\ valid.
comment22.params=direction
comment22.target=void\ GoalScored(int)
comment22.text=The\ ball\ calls\ this\ function\ to\ let\ the\ world\ know\ it's\ in\ a\ goal.
comment23.params=Actor\ ActorTeam\ Action
comment23.target=int\ PlayerAction(Player,\ Team,\ int)
comment23.text=\ \ This\ should\ never\ be\ called\ from\ anywhere\ but\ PlayerAction.\ \ It\ is\n\ \ \ \ separate\ and\ synchronized\ to\ prevent\ two\ players\ from\ trying\ to\ modify\n\ \ \ \ the\ same\ variable\ at\ the\ same\ time.\ \ Since\ this\ and\ BallAction\ are\ the\n\ \ \ \ only\ two\ methods\ that\ modify\ the\ world,\ they\ are\ the\ only\ two\ that\n\ \ \ \ need\ to\ be\ synchronized\ to\ prevent\ corrupting\ it.\ \ Note\:\ \ It\ is\ still\n\ \ \ \ possible\ for\ clients\ to\ *read*\ corrupt\ data\ -\ if\ they\ read\ halfway\ through\n\ \ \ \ an\ update\ by\ the\ object\ that\ has\ the\ lock\ on\ the\ world.\ \ Just\ think\n\ \ \ \ of\ the\ tiny\ amount\ of\ noise\ from\ that\ as\ another\ challenge\ for\n\ \ \ \ players\ to\ deal\ with.\ \ (I\ don't\ want\ to\ synchronize\ everything\ for\nperformance\ reasons)
comment24.params=
comment24.target=void\ WindowClosing()
comment24.text=\ \ Called\ by\ GUI\ when\ the\ window\ is\ closing\ -\ let's\ us\ notify\ the\ teams\ that\nthey're\ about\ to\ go\ bye-bye
comment25.params=Origin\ Target\ Side
comment25.target=int\ GetDirection(java.awt.Point,\ java.awt.Point,\ int)
comment25.text=\ \ Returns\ the\ direction\ a\ player\ at\ origin\ would\ have\ to\ move\ in\ to\ get\ to\ Target.\ \ Side\ is\n\ \ \ \ used\ to\ reverse\ things\ for\ the\ west\ team.\ \ I've\ got\ to\ be\ making\ this\ more\ complicated\nthan\ it\ needs\ to\ be.
comment26.params=target
comment26.target=Team\ GetTeam(Player)
comment26.text=Returns\ the\ team\ that\ a\ given\ player\ is\ on.
comment27.params=A\ B
comment27.target=float\ GetDistance(java.awt.Point,\ java.awt.Point)
comment28.params=Target
comment28.target=int\ GetSquareContents(java.awt.Point)
comment28.text=\ \ Returns\ the\ contents\ of\ a\ square\ in\ the\ world.\ \ It\ returns\ BOUNDARY,\ BALL,\ EASTPLAYER,\n\ \ \ \ WESTPLAYER,\ or\ EMPTY.\ \ Look()\ needs\ to\ turn\ EASTPLAYER\ and\ WESTPLAYER\ninto\ TEAMMATE\ and\ OPPONENT\ depending\ on\ the\ caller.
comment29.params=direction
comment29.target=java.awt.Point\ GetDelta(int)
comment3.params=
comment3.target=void\ Pause()
comment30.params=
comment30.target=void\ ResetScore()
comment31.params=
comment31.target=void\ TestForWin()
comment32.params=
comment32.target=void\ Timeout()
comment33.params=c
comment33.target=void\ SetCycles(int)
comment34.params=
comment34.target=int\ GetCycles()
comment35.params=
comment35.target=void\ LittleTimeout()
comment4.params=
comment4.target=void\ Step()
comment5.params=
comment5.target=boolean\ GameOn()
comment6.params=
comment6.target=boolean\ Stepping()
comment7.params=
comment7.target=void\ Go()
comment7.text=\ \ Monitors\ when\ players\ are\ allowed\ to\ go\ next.\n
comment8.params=
comment8.target=void\ SpeedUp()
comment9.params=
comment9.target=void\ SlowDown()
numComments=36
