#BlueJ class context
comment0.target=Syro
comment1.params=
comment1.target=void\ InitializeGame()
comment10.params=
comment10.target=int\ Player2()
comment11.params=
comment11.target=int\ Player3()
comment12.params=
comment12.target=int\ Player4()
comment13.params=player
comment13.target=int\ Wingman(int)
comment13.text=\n\ breakaway.h\n\ \n\ Contains\ code\ for\ the\ breakaway\ strategy\ in\ which\ two\ players\ attempt\n\ to\ pass\ the\ ball\ back\ to\ a\ third\ player,\ who\ will\ then\ pass\ the\ ball\n\ forward\ to\ those\ two\ again\ (hopefully\ confusing\ the\ opponents\ in\ the\n\ process)\ allowing\ them\ to\ make\ a\ breakaway\ with\ the\ ball.\ \ The\ fourth\n\ player\ is\ a\ goalie\ and\ his\ code\ is\ in\ goalie.h\n\n\ The\ two\ players\ use\ the\ Leader\ code.\ \ The\ guy\ who\ hangs\ back\ uses\n\ the\ Wingman\ code.\n\n
comment14.params=player
comment14.target=int\ Leader(int)
comment15.params=player
comment15.target=int\ DiagPusher(int)
comment15.text=\n\ diagpass.h\n\n\ code\ for\ strategy\ which\ has\ two\ players\ diagonally\ pushing\n\ the\ ball\ (if\ they\ can),\ one\ defender/goalie,\ and\ one\ player\n\ who\ shadows\ the\ goalie\ for\ passes\ (e.g.\ rushnpass)\n\n
comment16.params=player
comment16.target=int\ Goalie(int)
comment16.text=\n\ goalie.h\n\n\ Contains\ code\ for\ the\ defensive\ player\ of\ any\ strategy\n\n
comment17.params=player
comment17.target=int\ Goalie_Pass(int)
comment18.params=
comment18.target=void\ InitializePassers()
comment18.text=\n\ passers.h\n\n\ Tries\ to\ position\ ball\ and\ players\ to\ make\ an\ early\ breakaway.\n\ The\ basic\ concept\ behind\ this\ strategy\ is\ to\ make\ as\ many\n\ consecutive\ kicks\ as\ possible\ to\ move\ the\ ball\ away\ from\ the\n\ opponents\ and\ to\ a\ break\ away\ player.\n\ This\ strategy\ is\ only\ used\ as\ a\ startup\ strategy.\ \ If\ it\ fails,\n\ it\ modifies\ the\ positions\ of\ some\ players\ or\ changes\ to\ a\n\ completely\ different\ strategy.\n\n\ NOTE\:\ this\ strategy\ is\ extremely\ vulnerable\ if\ the\ ball\ is\ placed\n\ in\ the\ canter\ of\ the\ field\ at\ the\ beginning\ of\ a\ play.\ \ This\n\ is\ because\ there\ is\ not\ a\ lot\ of\ space\ to\ kick\ the\ ball\ up\ or\ down\n\ and\ out\ of\ the\ opponents\ way.\n\ \ \ The\ initial\ positions\ are\ also\ vulnerable\ to\ diagonal\ pushing\ by\n\ the\ opponent.\n\n
comment19.params=player
comment19.target=int\ Interceptor(int)
comment2.params=
comment2.target=void\ InitializePoint()
comment20.params=player
comment20.target=int\ Breaker(int)
comment21.params=player
comment21.target=int\ Winger(int)
comment22.params=player
comment22.target=int\ Scout(int)
comment23.params=player
comment23.target=int\ Pusher(int)
comment23.text=\n\ pushers.h\n\n\ Contains\ code\ for\ the\ pushers\ team.\ \ This\ team\ is\ exactly\ identical\n\ to\ the\ Smart\ Rushers\ strategy\ except\ that\ they\ push\ the\ ball\ instead\n\ of\ kicking\ it.\n\n
comment24.params=player
comment24.target=int\ Wing(int)
comment24.text=\n\ rushnpass.h\n\n\ Code\ for\ the\ goalie's\ wingman\ in\ some\ strategies\n\n
comment25.params=player
comment25.target=int\ Rusher(int)
comment25.text=\n\ smartrush.h\n\n\ Contains\ code\ for\ the\ intelligent\ rusher\ that\ runs\ for\ the\n\ ball\ but\ can\ take\ multiple\ paths\ and\ is\ generally\ a\ little\ bit\n\ more\ aware\ then\ the\ player\ who\ returns\ BallDirection\ only.\n\n\ This\ player\ will\ kick\ the\ ball\ if\ an\ opponent\ is\ very\ close\n\ but\ otherwise\ push\ it\n\n
comment26.params=
comment26.target=void\ Pick_New_Starting_Strategy()
comment26.text=\n\ strategy.h\n\n\ Contains\ code\ that\ determines\ which\ strategy\ should\ be\ used\n\ when\ and\ how\ successful\ it\ is.\n\n
comment27.params=
comment27.target=void\ Pick_New_Main_Strategy()
comment28.params=
comment28.target=void\ Init_Strategy_Weights()
comment29.params=strategy\ change
comment29.target=void\ Update_Main_Strategy_Weights(int,\ int)
comment3.params=
comment3.target=void\ WonPoint()
comment30.params=strategy\ change
comment30.target=void\ Update_Startup_Strategy_Weights(int,\ int)
comment31.params=
comment31.target=void\ Check_Strategies()
comment32.params=MoveX\ MoveY
comment32.target=int\ move(int,\ int)
comment32.text=\n\ routines.h\n\n\ Collection\ of\ useful\ routines.\n\n\ Heavily\ modified\ from\ original\ provided\ by\ Eric\ Chown\n\n
comment33.params=player\ dir\ kick
comment33.target=int\ Kick(int,\ int,\ boolean)
comment34.params=x\ y
comment34.target=int\ MoveAbs(int,\ int)
comment35.params=player
comment35.target=void\ SetPositions(int)
comment36.params=tempballx\ tempbally\ priority
comment36.target=void\ UpdateBallPosition(int,\ int,\ int)
comment37.params=player
comment37.target=void\ Triangulate(int)
comment38.params=dir
comment38.target=int\ StringToInt(int)
comment39.params=dir
comment39.target=int\ IntToString(int)
comment4.params=m
comment4.target=void\ Debug(java.lang.String)
comment40.params=dir
comment40.target=int\ ApproximateDirection(int)
comment41.params=dir
comment41.target=boolean\ NoOpponentTo(int)
comment42.params=side
comment42.target=boolean\ NearEdge(int)
comment43.params=
comment43.target=boolean\ NextToBall()
comment44.params=
comment44.target=void\ GetInfo()
comment45.params=player
comment45.target=boolean\ OpponentBehind(int)
comment5.params=
comment5.target=void\ LostPoint()
comment6.params=
comment6.target=void\ GameOver()
comment7.params=player
comment7.target=int\ AllPlayer(int)
comment8.params=
comment8.target=int\ getAction()
comment9.params=
comment9.target=int\ Player1()
numComments=46
